// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.26.1
// source: executor/v1/executor.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RuntimeType int32

const (
	RuntimeType_RUNTIME_UNSPECIFIED RuntimeType = 0
	RuntimeType_RUNTIME_HOST        RuntimeType = 1
	RuntimeType_RUNTIME_DOCKER      RuntimeType = 2
)

// Enum value maps for RuntimeType.
var (
	RuntimeType_name = map[int32]string{
		0: "RUNTIME_UNSPECIFIED",
		1: "RUNTIME_HOST",
		2: "RUNTIME_DOCKER",
	}
	RuntimeType_value = map[string]int32{
		"RUNTIME_UNSPECIFIED": 0,
		"RUNTIME_HOST":        1,
		"RUNTIME_DOCKER":      2,
	}
)

func (x RuntimeType) Enum() *RuntimeType {
	p := new(RuntimeType)
	*p = x
	return p
}

func (x RuntimeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuntimeType) Descriptor() protoreflect.EnumDescriptor {
	return file_executor_v1_executor_proto_enumTypes[0].Descriptor()
}

func (RuntimeType) Type() protoreflect.EnumType {
	return &file_executor_v1_executor_proto_enumTypes[0]
}

func (x RuntimeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RuntimeType.Descriptor instead.
func (RuntimeType) EnumDescriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{0}
}

type DockerPullOpts_PullStrategy int32

const (
	DockerPullOpts_PULL_STRATEGY_UNSPECIFIED DockerPullOpts_PullStrategy = 0
	DockerPullOpts_PULL_STRATEGY_NEVER       DockerPullOpts_PullStrategy = 1
	DockerPullOpts_PULL_STRATEGY_ALWAYS      DockerPullOpts_PullStrategy = 2
	DockerPullOpts_PULL_STRATEGY_NOT_EXISTS  DockerPullOpts_PullStrategy = 3
)

// Enum value maps for DockerPullOpts_PullStrategy.
var (
	DockerPullOpts_PullStrategy_name = map[int32]string{
		0: "PULL_STRATEGY_UNSPECIFIED",
		1: "PULL_STRATEGY_NEVER",
		2: "PULL_STRATEGY_ALWAYS",
		3: "PULL_STRATEGY_NOT_EXISTS",
	}
	DockerPullOpts_PullStrategy_value = map[string]int32{
		"PULL_STRATEGY_UNSPECIFIED": 0,
		"PULL_STRATEGY_NEVER":       1,
		"PULL_STRATEGY_ALWAYS":      2,
		"PULL_STRATEGY_NOT_EXISTS":  3,
	}
)

func (x DockerPullOpts_PullStrategy) Enum() *DockerPullOpts_PullStrategy {
	p := new(DockerPullOpts_PullStrategy)
	*p = x
	return p
}

func (x DockerPullOpts_PullStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DockerPullOpts_PullStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_executor_v1_executor_proto_enumTypes[1].Descriptor()
}

func (DockerPullOpts_PullStrategy) Type() protoreflect.EnumType {
	return &file_executor_v1_executor_proto_enumTypes[1]
}

func (x DockerPullOpts_PullStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DockerPullOpts_PullStrategy.Descriptor instead.
func (DockerPullOpts_PullStrategy) EnumDescriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{7, 0}
}

type IntrospectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IntrospectRequest) Reset() {
	*x = IntrospectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntrospectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectRequest) ProtoMessage() {}

func (x *IntrospectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectRequest.ProtoReflect.Descriptor instead.
func (*IntrospectRequest) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{0}
}

type IntrospectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Os     string   `protobuf:"bytes,1,opt,name=os,proto3" json:"os,omitempty"`
	Arch   string   `protobuf:"bytes,2,opt,name=arch,proto3" json:"arch,omitempty"`
	Ncpu   uint32   `protobuf:"varint,4,opt,name=ncpu,proto3" json:"ncpu,omitempty"`
	Labels []string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *IntrospectResponse) Reset() {
	*x = IntrospectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntrospectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntrospectResponse) ProtoMessage() {}

func (x *IntrospectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntrospectResponse.ProtoReflect.Descriptor instead.
func (*IntrospectResponse) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{1}
}

func (x *IntrospectResponse) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *IntrospectResponse) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *IntrospectResponse) GetNcpu() uint32 {
	if x != nil {
		return x.Ncpu
	}
	return 0
}

func (x *IntrospectResponse) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type OpenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId   string `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	RuntimeId string `protobuf:"bytes,2,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	Opts      *Opts  `protobuf:"bytes,3,opt,name=opts,proto3" json:"opts,omitempty"`
}

func (x *OpenRequest) Reset() {
	*x = OpenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenRequest) ProtoMessage() {}

func (x *OpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenRequest.ProtoReflect.Descriptor instead.
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{2}
}

func (x *OpenRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *OpenRequest) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *OpenRequest) GetOpts() *Opts {
	if x != nil {
		return x.Opts
	}
	return nil
}

type OpenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkDirectory string `protobuf:"bytes,1,opt,name=work_directory,json=workDirectory,proto3" json:"work_directory,omitempty"`
}

func (x *OpenResponse) Reset() {
	*x = OpenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenResponse) ProtoMessage() {}

func (x *OpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenResponse.ProtoReflect.Descriptor instead.
func (*OpenResponse) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{3}
}

func (x *OpenResponse) GetWorkDirectory() string {
	if x != nil {
		return x.WorkDirectory
	}
	return ""
}

type Opts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   RuntimeType       `protobuf:"varint,1,opt,name=type,proto3,enum=executor.RuntimeType" json:"type,omitempty"`
	Labels []string          `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
	Tags   map[string]string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are assignable to Opts:
	//
	//	*Opts_Host
	//	*Opts_Docker
	Opts isOpts_Opts `protobuf_oneof:"opts"`
}

func (x *Opts) Reset() {
	*x = Opts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Opts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Opts) ProtoMessage() {}

func (x *Opts) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Opts.ProtoReflect.Descriptor instead.
func (*Opts) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{4}
}

func (x *Opts) GetType() RuntimeType {
	if x != nil {
		return x.Type
	}
	return RuntimeType_RUNTIME_UNSPECIFIED
}

func (x *Opts) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Opts) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (m *Opts) GetOpts() isOpts_Opts {
	if m != nil {
		return m.Opts
	}
	return nil
}

func (x *Opts) GetHost() *HostOpts {
	if x, ok := x.GetOpts().(*Opts_Host); ok {
		return x.Host
	}
	return nil
}

func (x *Opts) GetDocker() *DockerOpts {
	if x, ok := x.GetOpts().(*Opts_Docker); ok {
		return x.Docker
	}
	return nil
}

type isOpts_Opts interface {
	isOpts_Opts()
}

type Opts_Host struct {
	Host *HostOpts `protobuf:"bytes,2,opt,name=host,proto3,oneof"`
}

type Opts_Docker struct {
	Docker *DockerOpts `protobuf:"bytes,3,opt,name=docker,proto3,oneof"`
}

func (*Opts_Host) isOpts_Opts() {}

func (*Opts_Docker) isOpts_Opts() {}

type HostOpts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HostOpts) Reset() {
	*x = HostOpts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostOpts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostOpts) ProtoMessage() {}

func (x *HostOpts) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostOpts.ProtoReflect.Descriptor instead.
func (*HostOpts) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{5}
}

type DockerOpts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image *DockerPullOpts `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *DockerOpts) Reset() {
	*x = DockerOpts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerOpts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerOpts) ProtoMessage() {}

func (x *DockerOpts) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerOpts.ProtoReflect.Descriptor instead.
func (*DockerOpts) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{6}
}

func (x *DockerOpts) GetImage() *DockerPullOpts {
	if x != nil {
		return x.Image
	}
	return nil
}

type DockerPullOpts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUri     string                      `protobuf:"bytes,1,opt,name=image_uri,json=imageUri,proto3" json:"image_uri,omitempty"`
	PullStrategy DockerPullOpts_PullStrategy `protobuf:"varint,2,opt,name=pull_strategy,json=pullStrategy,proto3,enum=executor.DockerPullOpts_PullStrategy" json:"pull_strategy,omitempty"`
	Auth         *DockerPullAuth             `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *DockerPullOpts) Reset() {
	*x = DockerPullOpts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerPullOpts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerPullOpts) ProtoMessage() {}

func (x *DockerPullOpts) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerPullOpts.ProtoReflect.Descriptor instead.
func (*DockerPullOpts) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{7}
}

func (x *DockerPullOpts) GetImageUri() string {
	if x != nil {
		return x.ImageUri
	}
	return ""
}

func (x *DockerPullOpts) GetPullStrategy() DockerPullOpts_PullStrategy {
	if x != nil {
		return x.PullStrategy
	}
	return DockerPullOpts_PULL_STRATEGY_UNSPECIFIED
}

func (x *DockerPullOpts) GetAuth() *DockerPullAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

type DockerPullAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Auth:
	//
	//	*DockerPullAuth_Basic
	//	*DockerPullAuth_AwsEcr
	Auth isDockerPullAuth_Auth `protobuf_oneof:"auth"`
}

func (x *DockerPullAuth) Reset() {
	*x = DockerPullAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerPullAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerPullAuth) ProtoMessage() {}

func (x *DockerPullAuth) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerPullAuth.ProtoReflect.Descriptor instead.
func (*DockerPullAuth) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{8}
}

func (m *DockerPullAuth) GetAuth() isDockerPullAuth_Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (x *DockerPullAuth) GetBasic() *BasicAuth {
	if x, ok := x.GetAuth().(*DockerPullAuth_Basic); ok {
		return x.Basic
	}
	return nil
}

func (x *DockerPullAuth) GetAwsEcr() *AWSECRAuth {
	if x, ok := x.GetAuth().(*DockerPullAuth_AwsEcr); ok {
		return x.AwsEcr
	}
	return nil
}

type isDockerPullAuth_Auth interface {
	isDockerPullAuth_Auth()
}

type DockerPullAuth_Basic struct {
	Basic *BasicAuth `protobuf:"bytes,1,opt,name=basic,proto3,oneof"`
}

type DockerPullAuth_AwsEcr struct {
	AwsEcr *AWSECRAuth `protobuf:"bytes,2,opt,name=aws_ecr,json=awsEcr,proto3,oneof"`
}

func (*DockerPullAuth_Basic) isDockerPullAuth_Auth() {}

func (*DockerPullAuth_AwsEcr) isDockerPullAuth_Auth() {}

type BasicAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *BasicAuth) Reset() {
	*x = BasicAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicAuth) ProtoMessage() {}

func (x *BasicAuth) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicAuth.ProtoReflect.Descriptor instead.
func (*BasicAuth) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{9}
}

func (x *BasicAuth) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BasicAuth) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AWSECRAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region         string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	AwsAccessKeyId string `protobuf:"bytes,2,opt,name=aws_access_key_id,json=awsAccessKeyId,proto3" json:"aws_access_key_id,omitempty"`
	AwsSecretKey   string `protobuf:"bytes,3,opt,name=aws_secret_key,json=awsSecretKey,proto3" json:"aws_secret_key,omitempty"`
}

func (x *AWSECRAuth) Reset() {
	*x = AWSECRAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AWSECRAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSECRAuth) ProtoMessage() {}

func (x *AWSECRAuth) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSECRAuth.ProtoReflect.Descriptor instead.
func (*AWSECRAuth) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{10}
}

func (x *AWSECRAuth) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AWSECRAuth) GetAwsAccessKeyId() string {
	if x != nil {
		return x.AwsAccessKeyId
	}
	return ""
}

func (x *AWSECRAuth) GetAwsSecretKey() string {
	if x != nil {
		return x.AwsSecretKey
	}
	return ""
}

type ExecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId string    `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	ExecId    string    `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	Opts      *ExecOpts `protobuf:"bytes,3,opt,name=opts,proto3" json:"opts,omitempty"`
}

func (x *ExecRequest) Reset() {
	*x = ExecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecRequest) ProtoMessage() {}

func (x *ExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecRequest.ProtoReflect.Descriptor instead.
func (*ExecRequest) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{11}
}

func (x *ExecRequest) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *ExecRequest) GetExecId() string {
	if x != nil {
		return x.ExecId
	}
	return ""
}

func (x *ExecRequest) GetOpts() *ExecOpts {
	if x != nil {
		return x.Opts
	}
	return nil
}

type ExecOpts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Args []string          `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	Env  []string          `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty"`
	Tags map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ExecOpts) Reset() {
	*x = ExecOpts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecOpts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecOpts) ProtoMessage() {}

func (x *ExecOpts) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecOpts.ProtoReflect.Descriptor instead.
func (*ExecOpts) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{12}
}

func (x *ExecOpts) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExecOpts) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ExecOpts) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *ExecOpts) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ExecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExitCode int32 `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *ExecResponse) Reset() {
	*x = ExecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecResponse) ProtoMessage() {}

func (x *ExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecResponse.ProtoReflect.Descriptor instead.
func (*ExecResponse) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{13}
}

func (x *ExecResponse) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type FileTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId string               `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	ImportId  string               `protobuf:"bytes,2,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
	FileId    string               `protobuf:"bytes,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Header    *FileTransferHeader  `protobuf:"bytes,4,opt,name=header,proto3" json:"header,omitempty"`
	Body      *FileTransferBody    `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	Trailer   *FileTransferTrailer `protobuf:"bytes,6,opt,name=trailer,proto3" json:"trailer,omitempty"`
}

func (x *FileTransfer) Reset() {
	*x = FileTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransfer) ProtoMessage() {}

func (x *FileTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransfer.ProtoReflect.Descriptor instead.
func (*FileTransfer) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{14}
}

func (x *FileTransfer) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *FileTransfer) GetImportId() string {
	if x != nil {
		return x.ImportId
	}
	return ""
}

func (x *FileTransfer) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileTransfer) GetHeader() *FileTransferHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *FileTransfer) GetBody() *FileTransferBody {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *FileTransfer) GetTrailer() *FileTransferTrailer {
	if x != nil {
		return x.Trailer
	}
	return nil
}

type FileTransferHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDir    bool   `protobuf:"varint,1,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
	SrcPath  string `protobuf:"bytes,2,opt,name=src_path,json=srcPath,proto3" json:"src_path,omitempty"`
	DestPath string `protobuf:"bytes,3,opt,name=dest_path,json=destPath,proto3" json:"dest_path,omitempty"`
	Mode     uint32 `protobuf:"varint,4,opt,name=mode,proto3" json:"mode,omitempty"`
	Size     uint64 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *FileTransferHeader) Reset() {
	*x = FileTransferHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTransferHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransferHeader) ProtoMessage() {}

func (x *FileTransferHeader) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransferHeader.ProtoReflect.Descriptor instead.
func (*FileTransferHeader) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{15}
}

func (x *FileTransferHeader) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *FileTransferHeader) GetSrcPath() string {
	if x != nil {
		return x.SrcPath
	}
	return ""
}

func (x *FileTransferHeader) GetDestPath() string {
	if x != nil {
		return x.DestPath
	}
	return ""
}

func (x *FileTransferHeader) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *FileTransferHeader) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type FileTransferBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Data   []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FileTransferBody) Reset() {
	*x = FileTransferBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTransferBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransferBody) ProtoMessage() {}

func (x *FileTransferBody) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransferBody.ProtoReflect.Descriptor instead.
func (*FileTransferBody) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{16}
}

func (x *FileTransferBody) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FileTransferBody) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type FileTransferTrailer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Md5 []byte `protobuf:"bytes,1,opt,name=md5,proto3" json:"md5,omitempty"`
}

func (x *FileTransferTrailer) Reset() {
	*x = FileTransferTrailer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTransferTrailer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransferTrailer) ProtoMessage() {}

func (x *FileTransferTrailer) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransferTrailer.ProtoReflect.Descriptor instead.
func (*FileTransferTrailer) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{17}
}

func (x *FileTransferTrailer) GetMd5() []byte {
	if x != nil {
		return x.Md5
	}
	return nil
}

type ImportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ImportResponse) Reset() {
	*x = ImportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportResponse) ProtoMessage() {}

func (x *ImportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportResponse.ProtoReflect.Descriptor instead.
func (*ImportResponse) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{18}
}

type ExportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId string `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	ExportId  string `protobuf:"bytes,2,opt,name=export_id,json=exportId,proto3" json:"export_id,omitempty"`
	SrcPath   string `protobuf:"bytes,3,opt,name=src_path,json=srcPath,proto3" json:"src_path,omitempty"`
	DestPath  string `protobuf:"bytes,4,opt,name=dest_path,json=destPath,proto3" json:"dest_path,omitempty"`
}

func (x *ExportRequest) Reset() {
	*x = ExportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRequest) ProtoMessage() {}

func (x *ExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRequest.ProtoReflect.Descriptor instead.
func (*ExportRequest) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{19}
}

func (x *ExportRequest) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *ExportRequest) GetExportId() string {
	if x != nil {
		return x.ExportId
	}
	return ""
}

func (x *ExportRequest) GetSrcPath() string {
	if x != nil {
		return x.SrcPath
	}
	return ""
}

func (x *ExportRequest) GetDestPath() string {
	if x != nil {
		return x.DestPath
	}
	return ""
}

type CloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId string `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
}

func (x *CloseRequest) Reset() {
	*x = CloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest) ProtoMessage() {}

func (x *CloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest.ProtoReflect.Descriptor instead.
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{20}
}

func (x *CloseRequest) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

type CloseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseResponse) Reset() {
	*x = CloseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseResponse) ProtoMessage() {}

func (x *CloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseResponse.ProtoReflect.Descriptor instead.
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{21}
}

type EventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId string `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
}

func (x *EventsRequest) Reset() {
	*x = EventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsRequest) ProtoMessage() {}

func (x *EventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsRequest.ProtoReflect.Descriptor instead.
func (*EventsRequest) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{22}
}

func (x *EventsRequest) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId   string `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	GroupName string `protobuf:"bytes,3,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Sequence  uint64 `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*Event_RuntimeOpened
	//	*Event_ExecStart
	//	*Event_ExecEnd
	//	*Event_ImportStart
	//	*Event_ImportEnd
	//	*Event_ExportStart
	//	*Event_ExportEnd
	//	*Event_Stdout
	//	*Event_Stderr
	//	*Event_RuntimeClosed
	Payload isEvent_Payload `protobuf_oneof:"payload"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{23}
}

func (x *Event) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *Event) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Event) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (m *Event) GetPayload() isEvent_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Event) GetRuntimeOpened() *RuntimeOpenedEvent {
	if x, ok := x.GetPayload().(*Event_RuntimeOpened); ok {
		return x.RuntimeOpened
	}
	return nil
}

func (x *Event) GetExecStart() *ExecStartEvent {
	if x, ok := x.GetPayload().(*Event_ExecStart); ok {
		return x.ExecStart
	}
	return nil
}

func (x *Event) GetExecEnd() *ExecEndEvent {
	if x, ok := x.GetPayload().(*Event_ExecEnd); ok {
		return x.ExecEnd
	}
	return nil
}

func (x *Event) GetImportStart() *ImportStartEvent {
	if x, ok := x.GetPayload().(*Event_ImportStart); ok {
		return x.ImportStart
	}
	return nil
}

func (x *Event) GetImportEnd() *ImportEndEvent {
	if x, ok := x.GetPayload().(*Event_ImportEnd); ok {
		return x.ImportEnd
	}
	return nil
}

func (x *Event) GetExportStart() *ExportStartEvent {
	if x, ok := x.GetPayload().(*Event_ExportStart); ok {
		return x.ExportStart
	}
	return nil
}

func (x *Event) GetExportEnd() *ExportEndEvent {
	if x, ok := x.GetPayload().(*Event_ExportEnd); ok {
		return x.ExportEnd
	}
	return nil
}

func (x *Event) GetStdout() *StdoutEvent {
	if x, ok := x.GetPayload().(*Event_Stdout); ok {
		return x.Stdout
	}
	return nil
}

func (x *Event) GetStderr() *StderrEvent {
	if x, ok := x.GetPayload().(*Event_Stderr); ok {
		return x.Stderr
	}
	return nil
}

func (x *Event) GetRuntimeClosed() *RuntimeClosedEvent {
	if x, ok := x.GetPayload().(*Event_RuntimeClosed); ok {
		return x.RuntimeClosed
	}
	return nil
}

type isEvent_Payload interface {
	isEvent_Payload()
}

type Event_RuntimeOpened struct {
	RuntimeOpened *RuntimeOpenedEvent `protobuf:"bytes,5,opt,name=runtime_opened,json=runtimeOpened,proto3,oneof"`
}

type Event_ExecStart struct {
	ExecStart *ExecStartEvent `protobuf:"bytes,6,opt,name=exec_start,json=execStart,proto3,oneof"`
}

type Event_ExecEnd struct {
	ExecEnd *ExecEndEvent `protobuf:"bytes,7,opt,name=exec_end,json=execEnd,proto3,oneof"`
}

type Event_ImportStart struct {
	ImportStart *ImportStartEvent `protobuf:"bytes,8,opt,name=import_start,json=importStart,proto3,oneof"`
}

type Event_ImportEnd struct {
	ImportEnd *ImportEndEvent `protobuf:"bytes,9,opt,name=import_end,json=importEnd,proto3,oneof"`
}

type Event_ExportStart struct {
	ExportStart *ExportStartEvent `protobuf:"bytes,10,opt,name=export_start,json=exportStart,proto3,oneof"`
}

type Event_ExportEnd struct {
	ExportEnd *ExportEndEvent `protobuf:"bytes,11,opt,name=export_end,json=exportEnd,proto3,oneof"`
}

type Event_Stdout struct {
	Stdout *StdoutEvent `protobuf:"bytes,12,opt,name=stdout,proto3,oneof"`
}

type Event_Stderr struct {
	Stderr *StderrEvent `protobuf:"bytes,13,opt,name=stderr,proto3,oneof"`
}

type Event_RuntimeClosed struct {
	RuntimeClosed *RuntimeClosedEvent `protobuf:"bytes,14,opt,name=runtime_closed,json=runtimeClosed,proto3,oneof"`
}

func (*Event_RuntimeOpened) isEvent_Payload() {}

func (*Event_ExecStart) isEvent_Payload() {}

func (*Event_ExecEnd) isEvent_Payload() {}

func (*Event_ImportStart) isEvent_Payload() {}

func (*Event_ImportEnd) isEvent_Payload() {}

func (*Event_ExportStart) isEvent_Payload() {}

func (*Event_ExportEnd) isEvent_Payload() {}

func (*Event_Stdout) isEvent_Payload() {}

func (*Event_Stderr) isEvent_Payload() {}

func (*Event_RuntimeClosed) isEvent_Payload() {}

type RuntimeOpenedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId string `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	Opts      *Opts  `protobuf:"bytes,2,opt,name=opts,proto3" json:"opts,omitempty"`
}

func (x *RuntimeOpenedEvent) Reset() {
	*x = RuntimeOpenedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeOpenedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeOpenedEvent) ProtoMessage() {}

func (x *RuntimeOpenedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeOpenedEvent.ProtoReflect.Descriptor instead.
func (*RuntimeOpenedEvent) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{24}
}

func (x *RuntimeOpenedEvent) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *RuntimeOpenedEvent) GetOpts() *Opts {
	if x != nil {
		return x.Opts
	}
	return nil
}

type RuntimeClosedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId string `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
}

func (x *RuntimeClosedEvent) Reset() {
	*x = RuntimeClosedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuntimeClosedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeClosedEvent) ProtoMessage() {}

func (x *RuntimeClosedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeClosedEvent.ProtoReflect.Descriptor instead.
func (*RuntimeClosedEvent) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{25}
}

func (x *RuntimeClosedEvent) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

type StdoutEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   []byte          `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Source *LogEventSource `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *StdoutEvent) Reset() {
	*x = StdoutEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StdoutEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdoutEvent) ProtoMessage() {}

func (x *StdoutEvent) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdoutEvent.ProtoReflect.Descriptor instead.
func (*StdoutEvent) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{26}
}

func (x *StdoutEvent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StdoutEvent) GetSource() *LogEventSource {
	if x != nil {
		return x.Source
	}
	return nil
}

type StderrEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   []byte          `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Source *LogEventSource `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *StderrEvent) Reset() {
	*x = StderrEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StderrEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StderrEvent) ProtoMessage() {}

func (x *StderrEvent) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StderrEvent.ProtoReflect.Descriptor instead.
func (*StderrEvent) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{27}
}

func (x *StderrEvent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StderrEvent) GetSource() *LogEventSource {
	if x != nil {
		return x.Source
	}
	return nil
}

type LogEventSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Source:
	//
	//	*LogEventSource_Runtime
	//	*LogEventSource_Exec
	//	*LogEventSource_Director
	Source isLogEventSource_Source `protobuf_oneof:"source"`
}

func (x *LogEventSource) Reset() {
	*x = LogEventSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogEventSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEventSource) ProtoMessage() {}

func (x *LogEventSource) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEventSource.ProtoReflect.Descriptor instead.
func (*LogEventSource) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{28}
}

func (m *LogEventSource) GetSource() isLogEventSource_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *LogEventSource) GetRuntime() *LogSourceRuntime {
	if x, ok := x.GetSource().(*LogEventSource_Runtime); ok {
		return x.Runtime
	}
	return nil
}

func (x *LogEventSource) GetExec() *LogSourceExec {
	if x, ok := x.GetSource().(*LogEventSource_Exec); ok {
		return x.Exec
	}
	return nil
}

func (x *LogEventSource) GetDirector() *LogSourceDirector {
	if x, ok := x.GetSource().(*LogEventSource_Director); ok {
		return x.Director
	}
	return nil
}

type isLogEventSource_Source interface {
	isLogEventSource_Source()
}

type LogEventSource_Runtime struct {
	Runtime *LogSourceRuntime `protobuf:"bytes,2,opt,name=runtime,proto3,oneof"`
}

type LogEventSource_Exec struct {
	Exec *LogSourceExec `protobuf:"bytes,3,opt,name=exec,proto3,oneof"`
}

type LogEventSource_Director struct {
	Director *LogSourceDirector `protobuf:"bytes,4,opt,name=director,proto3,oneof"`
}

func (*LogEventSource_Runtime) isLogEventSource_Source() {}

func (*LogEventSource_Exec) isLogEventSource_Source() {}

func (*LogEventSource_Director) isLogEventSource_Source() {}

type LogSourceRuntime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId string `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
}

func (x *LogSourceRuntime) Reset() {
	*x = LogSourceRuntime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogSourceRuntime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogSourceRuntime) ProtoMessage() {}

func (x *LogSourceRuntime) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogSourceRuntime.ProtoReflect.Descriptor instead.
func (*LogSourceRuntime) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{29}
}

func (x *LogSourceRuntime) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

type LogSourceExec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId string `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	ExecId    string `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	// System is true if a knita component wrote the log.
	System bool `protobuf:"varint,3,opt,name=system,proto3" json:"system,omitempty"`
}

func (x *LogSourceExec) Reset() {
	*x = LogSourceExec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogSourceExec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogSourceExec) ProtoMessage() {}

func (x *LogSourceExec) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogSourceExec.ProtoReflect.Descriptor instead.
func (*LogSourceExec) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{30}
}

func (x *LogSourceExec) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *LogSourceExec) GetExecId() string {
	if x != nil {
		return x.ExecId
	}
	return ""
}

func (x *LogSourceExec) GetSystem() bool {
	if x != nil {
		return x.System
	}
	return false
}

type LogSourceDirector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LogSourceDirector) Reset() {
	*x = LogSourceDirector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogSourceDirector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogSourceDirector) ProtoMessage() {}

func (x *LogSourceDirector) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogSourceDirector.ProtoReflect.Descriptor instead.
func (*LogSourceDirector) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{31}
}

type ExecStartEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId string            `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	ExecId    string            `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	Opts      *ExecOpts         `protobuf:"bytes,3,opt,name=opts,proto3" json:"opts,omitempty"`
	Tags      map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ExecStartEvent) Reset() {
	*x = ExecStartEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecStartEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecStartEvent) ProtoMessage() {}

func (x *ExecStartEvent) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecStartEvent.ProtoReflect.Descriptor instead.
func (*ExecStartEvent) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{32}
}

func (x *ExecStartEvent) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *ExecStartEvent) GetExecId() string {
	if x != nil {
		return x.ExecId
	}
	return ""
}

func (x *ExecStartEvent) GetOpts() *ExecOpts {
	if x != nil {
		return x.Opts
	}
	return nil
}

func (x *ExecStartEvent) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ImportStartEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId string `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	ImportId  string `protobuf:"bytes,2,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
}

func (x *ImportStartEvent) Reset() {
	*x = ImportStartEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportStartEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportStartEvent) ProtoMessage() {}

func (x *ImportStartEvent) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportStartEvent.ProtoReflect.Descriptor instead.
func (*ImportStartEvent) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{33}
}

func (x *ImportStartEvent) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *ImportStartEvent) GetImportId() string {
	if x != nil {
		return x.ImportId
	}
	return ""
}

type ImportEndEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId string `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	ImportId  string `protobuf:"bytes,2,opt,name=import_id,json=importId,proto3" json:"import_id,omitempty"`
}

func (x *ImportEndEvent) Reset() {
	*x = ImportEndEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportEndEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportEndEvent) ProtoMessage() {}

func (x *ImportEndEvent) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportEndEvent.ProtoReflect.Descriptor instead.
func (*ImportEndEvent) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{34}
}

func (x *ImportEndEvent) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *ImportEndEvent) GetImportId() string {
	if x != nil {
		return x.ImportId
	}
	return ""
}

type ExportStartEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId string `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	ExportId  string `protobuf:"bytes,2,opt,name=export_id,json=exportId,proto3" json:"export_id,omitempty"`
}

func (x *ExportStartEvent) Reset() {
	*x = ExportStartEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportStartEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportStartEvent) ProtoMessage() {}

func (x *ExportStartEvent) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportStartEvent.ProtoReflect.Descriptor instead.
func (*ExportStartEvent) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{35}
}

func (x *ExportStartEvent) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *ExportStartEvent) GetExportId() string {
	if x != nil {
		return x.ExportId
	}
	return ""
}

type ExportEndEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId string `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	ExportId  string `protobuf:"bytes,2,opt,name=export_id,json=exportId,proto3" json:"export_id,omitempty"`
}

func (x *ExportEndEvent) Reset() {
	*x = ExportEndEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportEndEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportEndEvent) ProtoMessage() {}

func (x *ExportEndEvent) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportEndEvent.ProtoReflect.Descriptor instead.
func (*ExportEndEvent) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{36}
}

func (x *ExportEndEvent) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *ExportEndEvent) GetExportId() string {
	if x != nil {
		return x.ExportId
	}
	return ""
}

type ExecEndEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RuntimeId string `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	ExecId    string `protobuf:"bytes,2,opt,name=exec_id,json=execId,proto3" json:"exec_id,omitempty"`
	Error     string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"` // TODO structured error?
	ExitCode  int32  `protobuf:"varint,4,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *ExecEndEvent) Reset() {
	*x = ExecEndEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_v1_executor_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecEndEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecEndEvent) ProtoMessage() {}

func (x *ExecEndEvent) ProtoReflect() protoreflect.Message {
	mi := &file_executor_v1_executor_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecEndEvent.ProtoReflect.Descriptor instead.
func (*ExecEndEvent) Descriptor() ([]byte, []int) {
	return file_executor_v1_executor_proto_rawDescGZIP(), []int{37}
}

func (x *ExecEndEvent) GetRuntimeId() string {
	if x != nil {
		return x.RuntimeId
	}
	return ""
}

func (x *ExecEndEvent) GetExecId() string {
	if x != nil {
		return x.ExecId
	}
	return ""
}

func (x *ExecEndEvent) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ExecEndEvent) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

var File_executor_v1_executor_proto protoreflect.FileDescriptor

var file_executor_v1_executor_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x22, 0x13, 0x0a, 0x11, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x64, 0x0a, 0x12, 0x49,
	0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x63, 0x70, 0x75, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x6e, 0x63, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x22, 0x6b, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x6f, 0x70,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x2e, 0x4f, 0x70, 0x74, 0x73, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x22, 0x35,
	0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x92, 0x02, 0x0a, 0x04, 0x4f, 0x70, 0x74, 0x73, 0x12, 0x29,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x4f, 0x70, 0x74, 0x73, 0x2e,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x28, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x74,
	0x73, 0x48, 0x00, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x64, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x73, 0x48,
	0x00, 0x52, 0x06, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x22, 0x0a, 0x0a, 0x08, 0x48, 0x6f,
	0x73, 0x74, 0x4f, 0x70, 0x74, 0x73, 0x22, 0x3c, 0x0a, 0x0a, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x4f, 0x70, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x44,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x75, 0x6c, 0x6c, 0x4f, 0x70, 0x74, 0x73, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x22, 0xa7, 0x02, 0x0a, 0x0e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x50,
	0x75, 0x6c, 0x6c, 0x4f, 0x70, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x69, 0x12, 0x4a, 0x0a, 0x0d, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x75, 0x6c,
	0x6c, 0x4f, 0x70, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x52, 0x0c, 0x70, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x12, 0x2c, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x50, 0x75, 0x6c, 0x6c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x7e,
	0x0a, 0x0c, 0x50, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x1d,
	0x0a, 0x19, 0x50, 0x55, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a,
	0x13, 0x50, 0x55, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x4e,
	0x45, 0x56, 0x45, 0x52, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x55, 0x4c, 0x4c, 0x5f, 0x53,
	0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x5f, 0x41, 0x4c, 0x57, 0x41, 0x59, 0x53, 0x10, 0x02,
	0x12, 0x1c, 0x0a, 0x18, 0x50, 0x55, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47,
	0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x03, 0x22, 0x76,
	0x0a, 0x0e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x2b, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x12, 0x2f, 0x0a,
	0x07, 0x61, 0x77, 0x73, 0x5f, 0x65, 0x63, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x57, 0x53, 0x45, 0x43, 0x52,
	0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x06, 0x61, 0x77, 0x73, 0x45, 0x63, 0x72, 0x42, 0x06,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x43, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x75, 0x0a, 0x0a, 0x41,
	0x57, 0x53, 0x45, 0x43, 0x52, 0x41, 0x75, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x29, 0x0a, 0x11, 0x61, 0x77, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x77,
	0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x61, 0x77, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x77, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x22, 0x6d, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x78, 0x65, 0x63, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x6f, 0x70, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x4f, 0x70, 0x74, 0x73, 0x52, 0x04, 0x6f, 0x70, 0x74,
	0x73, 0x22, 0xaf, 0x01, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x4f, 0x70, 0x74, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f,
	0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x4f, 0x70, 0x74, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x2b, 0x0a, 0x0c, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x82, 0x02, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f,
	0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x37, 0x0a, 0x07,
	0x74, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x69, 0x6c, 0x65, 0x72, 0x22, 0x8b, 0x01, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06,
	0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73,
	0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x22, 0x3e, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x27, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x54, 0x72, 0x61, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64,
	0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0x10, 0x0a, 0x0e,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x83,
	0x01, 0x0a, 0x0d, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x72, 0x63, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x72, 0x63, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x22, 0x2d, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x49, 0x64, 0x22, 0xc0, 0x05, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4f,
	0x70, 0x65, 0x6e, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x65,
	0x78, 0x65, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x65, 0x78, 0x65,
	0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x65,
	0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x45, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x07, 0x65, 0x78, 0x65, 0x63, 0x45, 0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x69,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x0b, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x45, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x69, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x45, 0x6e, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x53,
	0x74, 0x64, 0x6f, 0x75, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74,
	0x64, 0x6f, 0x75, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e,
	0x53, 0x74, 0x64, 0x65, 0x72, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x74, 0x64, 0x65, 0x72, 0x72, 0x12, 0x45, 0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x57, 0x0a, 0x12, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04,
	0x6f, 0x70, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x4f, 0x70, 0x74, 0x73, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73,
	0x22, 0x33, 0x0a, 0x12, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x0b, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x53, 0x0a, 0x0b, 0x53, 0x74,
	0x64, 0x65, 0x72, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0xbc, 0x01, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x4c,
	0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x65, 0x78,
	0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x78, 0x65,
	0x63, 0x48, 0x00, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x39, 0x0a, 0x08, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x08, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x31,
	0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49,
	0x64, 0x22, 0x5f, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x78,
	0x65, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x65, 0x63, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0xe1, 0x01, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x78, 0x65,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x65, 0x63,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x4f, 0x70, 0x74, 0x73, 0x52, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4e, 0x0a, 0x10, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x0e, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x10, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x0e, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x0c, 0x45, 0x78, 0x65, 0x63, 0x45,
	0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x65, 0x63, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x2a, 0x4c, 0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x55, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x55,
	0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x48, 0x4f, 0x53, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x52, 0x55, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x44, 0x4f, 0x43, 0x4b, 0x45, 0x52, 0x10, 0x02,
	0x32, 0xac, 0x03, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x47, 0x0a,
	0x0a, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x15,
	0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a,
	0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x15, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16,
	0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f,
	0x72, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x28, 0x01, 0x12, 0x3b, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x2e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x30, 0x01, 0x12,
	0x38, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x16, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x42,
	0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x6e,
	0x69, 0x74, 0x61, 0x2d, 0x69, 0x6f, 0x2f, 0x6b, 0x6e, 0x69, 0x74, 0x61, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_executor_v1_executor_proto_rawDescOnce sync.Once
	file_executor_v1_executor_proto_rawDescData = file_executor_v1_executor_proto_rawDesc
)

func file_executor_v1_executor_proto_rawDescGZIP() []byte {
	file_executor_v1_executor_proto_rawDescOnce.Do(func() {
		file_executor_v1_executor_proto_rawDescData = protoimpl.X.CompressGZIP(file_executor_v1_executor_proto_rawDescData)
	})
	return file_executor_v1_executor_proto_rawDescData
}

var file_executor_v1_executor_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_executor_v1_executor_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_executor_v1_executor_proto_goTypes = []interface{}{
	(RuntimeType)(0),                 // 0: executor.RuntimeType
	(DockerPullOpts_PullStrategy)(0), // 1: executor.DockerPullOpts.PullStrategy
	(*IntrospectRequest)(nil),        // 2: executor.IntrospectRequest
	(*IntrospectResponse)(nil),       // 3: executor.IntrospectResponse
	(*OpenRequest)(nil),              // 4: executor.OpenRequest
	(*OpenResponse)(nil),             // 5: executor.OpenResponse
	(*Opts)(nil),                     // 6: executor.Opts
	(*HostOpts)(nil),                 // 7: executor.HostOpts
	(*DockerOpts)(nil),               // 8: executor.DockerOpts
	(*DockerPullOpts)(nil),           // 9: executor.DockerPullOpts
	(*DockerPullAuth)(nil),           // 10: executor.DockerPullAuth
	(*BasicAuth)(nil),                // 11: executor.BasicAuth
	(*AWSECRAuth)(nil),               // 12: executor.AWSECRAuth
	(*ExecRequest)(nil),              // 13: executor.ExecRequest
	(*ExecOpts)(nil),                 // 14: executor.ExecOpts
	(*ExecResponse)(nil),             // 15: executor.ExecResponse
	(*FileTransfer)(nil),             // 16: executor.FileTransfer
	(*FileTransferHeader)(nil),       // 17: executor.FileTransferHeader
	(*FileTransferBody)(nil),         // 18: executor.FileTransferBody
	(*FileTransferTrailer)(nil),      // 19: executor.FileTransferTrailer
	(*ImportResponse)(nil),           // 20: executor.ImportResponse
	(*ExportRequest)(nil),            // 21: executor.ExportRequest
	(*CloseRequest)(nil),             // 22: executor.CloseRequest
	(*CloseResponse)(nil),            // 23: executor.CloseResponse
	(*EventsRequest)(nil),            // 24: executor.EventsRequest
	(*Event)(nil),                    // 25: executor.Event
	(*RuntimeOpenedEvent)(nil),       // 26: executor.RuntimeOpenedEvent
	(*RuntimeClosedEvent)(nil),       // 27: executor.RuntimeClosedEvent
	(*StdoutEvent)(nil),              // 28: executor.StdoutEvent
	(*StderrEvent)(nil),              // 29: executor.StderrEvent
	(*LogEventSource)(nil),           // 30: executor.LogEventSource
	(*LogSourceRuntime)(nil),         // 31: executor.LogSourceRuntime
	(*LogSourceExec)(nil),            // 32: executor.LogSourceExec
	(*LogSourceDirector)(nil),        // 33: executor.LogSourceDirector
	(*ExecStartEvent)(nil),           // 34: executor.ExecStartEvent
	(*ImportStartEvent)(nil),         // 35: executor.ImportStartEvent
	(*ImportEndEvent)(nil),           // 36: executor.ImportEndEvent
	(*ExportStartEvent)(nil),         // 37: executor.ExportStartEvent
	(*ExportEndEvent)(nil),           // 38: executor.ExportEndEvent
	(*ExecEndEvent)(nil),             // 39: executor.ExecEndEvent
	nil,                              // 40: executor.Opts.TagsEntry
	nil,                              // 41: executor.ExecOpts.TagsEntry
	nil,                              // 42: executor.ExecStartEvent.TagsEntry
}
var file_executor_v1_executor_proto_depIdxs = []int32{
	6,  // 0: executor.OpenRequest.opts:type_name -> executor.Opts
	0,  // 1: executor.Opts.type:type_name -> executor.RuntimeType
	40, // 2: executor.Opts.tags:type_name -> executor.Opts.TagsEntry
	7,  // 3: executor.Opts.host:type_name -> executor.HostOpts
	8,  // 4: executor.Opts.docker:type_name -> executor.DockerOpts
	9,  // 5: executor.DockerOpts.image:type_name -> executor.DockerPullOpts
	1,  // 6: executor.DockerPullOpts.pull_strategy:type_name -> executor.DockerPullOpts.PullStrategy
	10, // 7: executor.DockerPullOpts.auth:type_name -> executor.DockerPullAuth
	11, // 8: executor.DockerPullAuth.basic:type_name -> executor.BasicAuth
	12, // 9: executor.DockerPullAuth.aws_ecr:type_name -> executor.AWSECRAuth
	14, // 10: executor.ExecRequest.opts:type_name -> executor.ExecOpts
	41, // 11: executor.ExecOpts.tags:type_name -> executor.ExecOpts.TagsEntry
	17, // 12: executor.FileTransfer.header:type_name -> executor.FileTransferHeader
	18, // 13: executor.FileTransfer.body:type_name -> executor.FileTransferBody
	19, // 14: executor.FileTransfer.trailer:type_name -> executor.FileTransferTrailer
	26, // 15: executor.Event.runtime_opened:type_name -> executor.RuntimeOpenedEvent
	34, // 16: executor.Event.exec_start:type_name -> executor.ExecStartEvent
	39, // 17: executor.Event.exec_end:type_name -> executor.ExecEndEvent
	35, // 18: executor.Event.import_start:type_name -> executor.ImportStartEvent
	36, // 19: executor.Event.import_end:type_name -> executor.ImportEndEvent
	37, // 20: executor.Event.export_start:type_name -> executor.ExportStartEvent
	38, // 21: executor.Event.export_end:type_name -> executor.ExportEndEvent
	28, // 22: executor.Event.stdout:type_name -> executor.StdoutEvent
	29, // 23: executor.Event.stderr:type_name -> executor.StderrEvent
	27, // 24: executor.Event.runtime_closed:type_name -> executor.RuntimeClosedEvent
	6,  // 25: executor.RuntimeOpenedEvent.opts:type_name -> executor.Opts
	30, // 26: executor.StdoutEvent.source:type_name -> executor.LogEventSource
	30, // 27: executor.StderrEvent.source:type_name -> executor.LogEventSource
	31, // 28: executor.LogEventSource.runtime:type_name -> executor.LogSourceRuntime
	32, // 29: executor.LogEventSource.exec:type_name -> executor.LogSourceExec
	33, // 30: executor.LogEventSource.director:type_name -> executor.LogSourceDirector
	14, // 31: executor.ExecStartEvent.opts:type_name -> executor.ExecOpts
	42, // 32: executor.ExecStartEvent.tags:type_name -> executor.ExecStartEvent.TagsEntry
	2,  // 33: executor.Executor.Introspect:input_type -> executor.IntrospectRequest
	4,  // 34: executor.Executor.Open:input_type -> executor.OpenRequest
	13, // 35: executor.Executor.Exec:input_type -> executor.ExecRequest
	16, // 36: executor.Executor.Import:input_type -> executor.FileTransfer
	21, // 37: executor.Executor.Export:input_type -> executor.ExportRequest
	22, // 38: executor.Executor.Close:input_type -> executor.CloseRequest
	24, // 39: executor.Executor.Events:input_type -> executor.EventsRequest
	3,  // 40: executor.Executor.Introspect:output_type -> executor.IntrospectResponse
	5,  // 41: executor.Executor.Open:output_type -> executor.OpenResponse
	15, // 42: executor.Executor.Exec:output_type -> executor.ExecResponse
	20, // 43: executor.Executor.Import:output_type -> executor.ImportResponse
	16, // 44: executor.Executor.Export:output_type -> executor.FileTransfer
	23, // 45: executor.Executor.Close:output_type -> executor.CloseResponse
	25, // 46: executor.Executor.Events:output_type -> executor.Event
	40, // [40:47] is the sub-list for method output_type
	33, // [33:40] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_executor_v1_executor_proto_init() }
func file_executor_v1_executor_proto_init() {
	if File_executor_v1_executor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_executor_v1_executor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntrospectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntrospectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Opts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostOpts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerOpts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerPullOpts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerPullAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AWSECRAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecOpts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTransferHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTransferBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTransferTrailer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeOpenedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuntimeClosedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StdoutEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StderrEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogEventSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogSourceRuntime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogSourceExec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogSourceDirector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecStartEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportStartEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportEndEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportStartEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportEndEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_v1_executor_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecEndEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_executor_v1_executor_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Opts_Host)(nil),
		(*Opts_Docker)(nil),
	}
	file_executor_v1_executor_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*DockerPullAuth_Basic)(nil),
		(*DockerPullAuth_AwsEcr)(nil),
	}
	file_executor_v1_executor_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*Event_RuntimeOpened)(nil),
		(*Event_ExecStart)(nil),
		(*Event_ExecEnd)(nil),
		(*Event_ImportStart)(nil),
		(*Event_ImportEnd)(nil),
		(*Event_ExportStart)(nil),
		(*Event_ExportEnd)(nil),
		(*Event_Stdout)(nil),
		(*Event_Stderr)(nil),
		(*Event_RuntimeClosed)(nil),
	}
	file_executor_v1_executor_proto_msgTypes[28].OneofWrappers = []interface{}{
		(*LogEventSource_Runtime)(nil),
		(*LogEventSource_Exec)(nil),
		(*LogEventSource_Director)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_executor_v1_executor_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_executor_v1_executor_proto_goTypes,
		DependencyIndexes: file_executor_v1_executor_proto_depIdxs,
		EnumInfos:         file_executor_v1_executor_proto_enumTypes,
		MessageInfos:      file_executor_v1_executor_proto_msgTypes,
	}.Build()
	File_executor_v1_executor_proto = out.File
	file_executor_v1_executor_proto_rawDesc = nil
	file_executor_v1_executor_proto_goTypes = nil
	file_executor_v1_executor_proto_depIdxs = nil
}
