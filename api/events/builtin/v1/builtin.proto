syntax = "proto3";

package builtin.events.knita.io;

option go_package = "github.com/knita-io/knita/api/events/builtin/v1";

import "executor/v1/executor.proto";
import "broker/v1/broker.proto";

message Error {
  string message = 1;
}

message DirectorInfo {
  string version = 1;
  executor.knita.io.SystemInfo sys_info = 2;
}

message BuildStartEvent {
  string build_id = 1;
  DirectorInfo director_info = 2;
}

message BuildResult {}

message BuildEndEvent {
  string build_id = 1;
  oneof status {
    Error error = 2;
    BuildResult result = 3;
  }
}

message RuntimeTenderStartEvent {
  string build_id = 1;
  string tender_id = 2;
  executor.knita.io.Opts opts = 3;
}

message RuntimeTenderResult {
  repeated broker.knita.io.RuntimeContract contracts = 1;
}

message RuntimeTenderEndEvent {
  string tender_id = 1;
  oneof status {
    Error error = 2;
    RuntimeTenderResult result = 3;
  }
}

message RuntimeSettlementStartEvent {
  string tender_id = 1;
  string contract_id = 2;
  string runtime_id = 3;
}

message RuntimeSettlementResult {}

message RuntimeSettlementEndEvent {
  string tender_id = 1;
  string contract_id = 2;
  string runtime_id = 3;
  oneof status {
    Error error = 4;
    RuntimeSettlementResult result = 5;
  }
}

message RuntimeOpenStartEvent {
  string runtime_id = 1;
  executor.knita.io.Opts opts = 2;
}

message RuntimeOpenResult {}

message RuntimeOpenEndEvent {
  string runtime_id = 1;
  oneof status {
    Error error = 2;
    RuntimeOpenResult result = 3;
  }
}

message RuntimeCloseStartEvent {
  string runtime_id = 1;
}

message RuntimeCloseResult {}

message RuntimeCloseEndEvent {
  string runtime_id = 1;
  oneof status {
    Error error = 2;
    RuntimeCloseResult result = 3;
  }
}

message StdoutEvent {
  bytes data = 1;
  LogEventSource source = 2;
}

message StderrEvent {
  bytes data = 1;
  LogEventSource source = 2;
}

message LogEventSource {
  oneof source {
    LogSourceRuntime runtime = 2;
    LogSourceExec exec = 3;
    LogSourceDirector director = 4;
  }
}

message LogSourceRuntime {
  string runtime_id = 1;
}

message LogSourceExec {
  string runtime_id = 1;
  string exec_id = 2;
  // System is true if a knita component wrote the log.
  bool system = 3;
}

message LogSourceDirector {}

message ExecStartEvent {
  string runtime_id = 1;
  string exec_id = 2;
  executor.knita.io.ExecOpts opts = 3;
  map<string, string> tags = 4;
}

message ExecResult {
  int32 exit_code = 4;
}

message ExecEndEvent {
  string runtime_id = 1;
  string exec_id = 2;
  oneof status {
    Error error = 3;
    ExecResult result = 4;
  }
}

message ImportStartEvent {
  string runtime_id = 1;
  string import_id = 2;
}

message ImportResult {}

message ImportEndEvent {
  string runtime_id = 1;
  string import_id = 2;
  oneof status {
    Error error = 3;
    ImportResult result = 4;
  }
}

message ExportStartEvent {
  string runtime_id = 1;
  string export_id = 2;
}

message ExportResult {}

message ExportEndEvent {
  string runtime_id = 1;
  string export_id = 2;
  oneof status {
    Error error = 3;
    ExportResult result = 4;
  }
}

message SyncPointReachedEvent {
  string barrier_id = 1;
}